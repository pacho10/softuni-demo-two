import { Stack, StageSynthesisOptions } from "aws-cdk-lib";
declare global {
    namespace jest {
        interface Matchers<R> {
            toMatchCdkSnapshot(options?: Options): R;
        }
    }
}
export type Options = StageSynthesisOptions & {
    /**
     * @deprecated No effect. Please remove this, there is no alternative.
     */
    readonly skipValidation?: boolean;
    /**
     * @deprecated No effect. Please remove this, there is no alternative.
     */
    readonly validateOnSynthesis?: boolean;
    /**
     * @deprecated No effect. Please remove this, there is no alternative.
     */
    readonly force?: boolean;
    /**
     * Output snapshots in YAML (instead of JSON)
     */
    yaml?: boolean;
    /**
     * Ignore Assets
     */
    ignoreAssets?: boolean;
    /**
     * Ignore Lambda Current Version
     */
    ignoreCurrentVersion?: boolean;
    /**
     * Match only resources of given types
     */
    subsetResourceTypes?: string[];
    /**
     * Match only resources of given keys
     */
    subsetResourceKeys?: string[];
    propertyMatchers?: {
        [property: string]: unknown;
    };
    /**
     * Excludes CDK v2-managed bootstrap versions.
     * Defaults to `true`.
     */
    ignoreBootstrapVersion?: boolean;
    /**
     * Ignore Metadata
     */
    ignoreMetadata?: boolean;
    /**
     * Ignore Tags on resources
     */
    ignoreTags?: boolean;
};
export declare const toMatchCdkSnapshot: (this: any, received: Stack, options?: Options) => import("expect").ExpectationResult;
