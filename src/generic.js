"use strict";
var aws = require("aws-sdk");
var ses = new aws.SES({ region: "eu-central-1" });
//const AWS = require('aws-sdk');
//const ses = AWS.SES();
exports.handler = async (event) => {
    for (const record of event.Records) {
        if (record.eventName === 'INSERT') {
            const newItem = record.dynamodb.NewImage;
            const emailAddress = process.env.SES_EMAIL_ADDRESS;
            const params = {
                Destination: {
                    ToAddresses: [emailAddress],
                },
                Message: {
                    Body: {
                        Text: {
                            Data: `New item added to DynamoDB:\n\n${JSON.stringify(newItem, null, 2)} \n` + `${new Date(Date.now())}`,
                        },
                    },
                    Subject: { Data: 'New DynamoDB Record Added' },
                },
                Source: emailAddress,
            };
            try {
                await ses.sendEmail(params).promise();
                console.log('Email sent successfully');
            }
            catch (error) {
                console.error('Error sending email:', error);
            }
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJpYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImdlbmVyaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUM3QixJQUFJLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxNQUFNLEVBQUUsY0FBYyxFQUFFLENBQUMsQ0FBQztBQUVsRCxpQ0FBaUM7QUFDakMsd0JBQXdCO0FBQ3hCLE9BQU8sQ0FBQyxPQUFPLEdBQUcsS0FBSyxFQUFFLEtBQUssRUFBRSxFQUFFO0lBQzlCLEtBQUssTUFBTSxNQUFNLElBQUksS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2pDLElBQUksTUFBTSxDQUFDLFNBQVMsS0FBSyxRQUFRLEVBQUUsQ0FBQztZQUNoQyxNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztZQUN6QyxNQUFNLFlBQVksR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFBO1lBRWxELE1BQU0sTUFBTSxHQUFHO2dCQUNYLFdBQVcsRUFBRTtvQkFDWCxXQUFXLEVBQUUsQ0FBQyxZQUFZLENBQUM7aUJBQzVCO2dCQUNELE9BQU8sRUFBRTtvQkFDUCxJQUFJLEVBQUU7d0JBQ0osSUFBSSxFQUFFOzRCQUNKLElBQUksRUFBRSxrQ0FBa0MsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxLQUFLLEdBQUcsR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRTt5QkFDMUc7cUJBQ0Y7b0JBQ0QsT0FBTyxFQUFFLEVBQUUsSUFBSSxFQUFFLDJCQUEyQixFQUFFO2lCQUMvQztnQkFDRCxNQUFNLEVBQUUsWUFBWTthQUNyQixDQUFDO1lBRUYsSUFBSSxDQUFDO2dCQUNILE1BQU0sR0FBRyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztnQkFDdEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO1lBQ3pDLENBQUM7WUFBQyxPQUFPLEtBQUssRUFBRSxDQUFDO2dCQUNmLE9BQU8sQ0FBQyxLQUFLLENBQUMsc0JBQXNCLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDL0MsQ0FBQztRQUNQLENBQUM7SUFDTCxDQUFDO0FBQ0wsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGF3cyA9IHJlcXVpcmUoXCJhd3Mtc2RrXCIpO1xudmFyIHNlcyA9IG5ldyBhd3MuU0VTKHsgcmVnaW9uOiBcImV1LWNlbnRyYWwtMVwiIH0pO1xuXG4vL2NvbnN0IEFXUyA9IHJlcXVpcmUoJ2F3cy1zZGsnKTtcbi8vY29uc3Qgc2VzID0gQVdTLlNFUygpO1xuZXhwb3J0cy5oYW5kbGVyID0gYXN5bmMgKGV2ZW50KSA9PiB7XG4gICAgZm9yIChjb25zdCByZWNvcmQgb2YgZXZlbnQuUmVjb3Jkcykge1xuICAgICAgICBpZiAocmVjb3JkLmV2ZW50TmFtZSA9PT0gJ0lOU0VSVCcpIHtcbiAgICAgICAgICAgIGNvbnN0IG5ld0l0ZW0gPSByZWNvcmQuZHluYW1vZGIuTmV3SW1hZ2U7XG4gICAgICAgICAgICBjb25zdCBlbWFpbEFkZHJlc3MgPSBwcm9jZXNzLmVudi5TRVNfRU1BSUxfQUREUkVTU1xuXG4gICAgICAgICAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICAgICAgICAgICAgRGVzdGluYXRpb246IHtcbiAgICAgICAgICAgICAgICAgIFRvQWRkcmVzc2VzOiBbZW1haWxBZGRyZXNzXSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIE1lc3NhZ2U6IHtcbiAgICAgICAgICAgICAgICAgIEJvZHk6IHtcbiAgICAgICAgICAgICAgICAgICAgVGV4dDoge1xuICAgICAgICAgICAgICAgICAgICAgIERhdGE6IGBOZXcgaXRlbSBhZGRlZCB0byBEeW5hbW9EQjpcXG5cXG4ke0pTT04uc3RyaW5naWZ5KG5ld0l0ZW0sIG51bGwsIDIpfSBcXG5gICsgYCR7bmV3IERhdGUoRGF0ZS5ub3coKSl9YCxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBTdWJqZWN0OiB7IERhdGE6ICdOZXcgRHluYW1vREIgUmVjb3JkIEFkZGVkJyB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgU291cmNlOiBlbWFpbEFkZHJlc3MsXG4gICAgICAgICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGF3YWl0IHNlcy5zZW5kRW1haWwocGFyYW1zKS5wcm9taXNlKCk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0VtYWlsIHNlbnQgc3VjY2Vzc2Z1bGx5Jyk7XG4gICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igc2VuZGluZyBlbWFpbDonLCBlcnJvcik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iXX0=